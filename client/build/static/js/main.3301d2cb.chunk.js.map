{"version":3,"sources":["actions/types.js","actions/index.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["FETCH_USER","fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","style","margin","credits","console","log","to","renderContent","Landing","textAlign","Dashboard","Survey","App","exact","path","component","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"yVAAaA,EAAW,aCGXC,EAAU,yDAAK,WAAMC,GAAN,eAAAC,EAAA,sEACFC,IAAMC,IAAI,qBADR,OACdC,EADc,OAEpBJ,EAAS,CAACK,KAAKP,EAAWQ,QAAQF,EAAIG,OAFlB,2CAAL,uDAKVC,EAAY,SAACC,GAAD,8CAAU,WAAMT,GAAN,eAAAC,EAAA,sEACTC,IAAMQ,KAAK,cAAcD,GADhB,OACrBL,EADqB,OAE3BJ,EAAS,CAACK,KAAKP,EAAWQ,QAAQF,EAAIG,OAFX,2CAAV,uD,iBCHnBI,E,uKACQ,IAAD,OACL,OACI,cAAC,IAAD,CAAgBC,KAAM,SAAUC,YAAa,6BAC7CC,OAAQ,EAAGL,MAAO,SAAAA,GAAK,OAAE,EAAKM,MAAMP,YAAYC,IAAQO,UAAWC,8GADnE,SAEI,wBAAQC,UAAU,MAAlB,+B,GALOC,aAWRC,cAAQ,KAAKC,EAAbD,CAAsBT,GCXxBW,EAAb,8KAEQ,OAAOC,KAAKR,MAAMS,MACd,KAAK,KACD,MAAO,iBACX,KAAK,EACD,OAAO,6BAAI,mBAAGC,KAAK,eAAR,iCACf,QACI,MAAO,CACP,6BAAY,cAAC,EAAD,KAAJ,KACR,qBAAYC,MAAO,CAACC,OAAO,UAA3B,sBAAgDJ,KAAKR,MAAMS,KAAKI,UAAxD,KACR,6BAAY,mBAAGH,KAAK,cAAR,qBAAJ,SAXxB,+BAiBQ,OADAI,QAAQC,IAAI,SAASP,KAAKR,OAEtB,8BACI,sBAAKG,UAAU,cAAf,UACI,cAAC,IAAD,CAAMa,GAAIR,KAAKR,MAAMS,KAAM,WAAY,IAAMN,UAAU,kBAAvD,oBACA,oBAAIA,UAAU,QAAd,SACSK,KAAKS,2BAtBlC,GAA4Bb,aAkCbC,mBAJf,YACI,MAAO,CAACI,KADoB,EAANA,QAIXJ,CAA0BE,GC7B1BW,MARf,WACI,OACI,qBAAKP,MAAO,CAACQ,UAAU,UAAvB,SACI,qECKNC,EAAU,WACZ,OAAO,4CAGLC,EAAO,WACT,OAAO,yCAGLC,E,kLAEEd,KAAKR,MAAMhB,YACX8B,QAAQC,IAAI,8B,+BAIhB,OACI,cAAC,IAAD,UACI,sBAAKZ,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,WAAWC,UAAWL,IACxC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,eAAeC,UAAWJ,a,GAb1CjB,aAqBHC,cAAQ,KAAKC,EAAbD,CAAuBiB,G,QCpCvBI,cAAgB,CAC3BjB,KCFW,WAA6B,IAApBkB,EAAmB,uDAAb,KAAKC,EAAQ,uCAEvC,OADAd,QAAQC,IAAI,qBAAqBa,GAC1BA,EAAOtC,MACV,KAAKP,EACD,OAAO6C,EAAOrC,UAAW,EAC7B,QACI,OAAOoC,M,QCAbE,EAAMC,YAAYC,EAAS,GAAGC,YAAgBC,MAEpDC,IAASC,OACT,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SAAwB,cAAC,EAAD,MAAkBO,SAASC,cAAc,UAEjEvB,QAAQC,IAAI,gBAAgBb,+GAC5BY,QAAQC,IAAI,iBAAiBb,gB","file":"static/js/main.3301d2cb.chunk.js","sourcesContent":["export const FETCH_USER='fetch_user'","import axios from 'axios'\r\nimport {FETCH_USER} from './types'\r\n\r\nexport const fetchUser=()=> async dispatch =>{\r\n        const res = await axios.get('/api/current_user')\r\n        dispatch({type:FETCH_USER,payload:res.data})   \r\n    }\r\n\r\nexport const handleToken=(token)=> async dispatch =>{\r\n        const res = await axios.post('/api/stripe',token)\r\n        dispatch({type:FETCH_USER,payload:res.data})   \r\n    }","import React,{Component} from 'react'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions'\r\n\r\nclass Payments extends Component {\r\n    render() {\r\n        return (\r\n            <StripeCheckout name={'Emaily'} description={'$5 USD for 5 email credits'}\r\n            amount={5} token={token=>this.props.handleToken(token)} stripeKey={process.env.REACT_APP_STRIPE_KEY}>\r\n                <button className=\"btn\">Add Credits</button>    \r\n            </StripeCheckout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,actions)(Payments)","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport Payments from './Payments'\r\n\r\nexport class Header extends Component {\r\n    renderContent() {\r\n        switch(this.props.auth) {\r\n            case null:\r\n                return 'still deciding'\r\n            case false:\r\n                return <li><a href='/auth/google'>Login with Google</a></li>\r\n            default:\r\n                return [\r\n                <li key='1'><Payments/></li>,\r\n                <li key='2' style={{margin:'0 10px'}}>Credits: {this.props.auth.credits}</li>,\r\n                <li key='3'><a href='/api/logout'>Logout</a></li>]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"header\",this.props)\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to={this.props.auth? '/surveys': \"/\"}  className=\"left brand-logo\">Emaily</Link>\r\n                    <ul className=\"right\">                        \r\n                            {this.renderContent()}                        \r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth}){\r\n    return {auth}\r\n}\r\n\r\nexport default connect (mapStateToProps)(Header)","import React from 'react'\r\n\r\nfunction Landing() {\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h4 >Collect feedback from your users</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import 'materialize-css/dist/css/materialize.min.css'\r\nimport React, {Component} from 'react'\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions'\r\nimport Header from './Header'\r\nimport Landing from './Landing'\r\n\r\n\r\n\r\nconst Dashboard=()=>{\r\n    return <h1>Dashboard</h1>\r\n}\r\n\r\nconst Survey=()=>{\r\n    return <h1>Survey</h1>\r\n}\r\n\r\nclass App extends Component {\r\n    componentDidMount(){\r\n        this.props.fetchUser();\r\n        console.log(\"inside componentDidMount\")\r\n    }\r\n    render() {\r\n    \r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"container\">\r\n                <Header/>\r\n                <Route exact path='/' component={Landing}/>\r\n                <Route exact path='/surveys' component={Dashboard}/>\r\n                <Route exact path='/surveys/new' component={Survey}/>          \r\n            </div>    \r\n        </BrowserRouter>\r\n\r\n    )\r\n    }\r\n}\r\n\r\nexport default connect(null,actions) (App)\r\n","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer'\r\n\r\nexport default combineReducers({\r\n    auth:authReducer\r\n})","import {FETCH_USER} from '../actions/types'\r\n\r\nexport default function(state=null,action) {\r\n    console.log(\"inside authreducer\",action)\r\n    switch(action.type){\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport {Provider} from 'react-redux'\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport reducers from './reducers'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nconst store=createStore(reducers,{},applyMiddleware(reduxThunk))\r\n\r\nReactDOM.render(\r\n<Provider store={store}><App/></Provider>,document.querySelector('#root'))\r\n\r\nconsole.log(\"stripe key is\",process.env.REACT_APP_STRIPE_KEY)\r\nconsole.log(\"Environment is\",process.env.NODE_ENV)"],"sourceRoot":""}